[
  {
    "rule_type": "i18n",
    "rule_name": "sample",
    "level": "warning",
    "reg_in_func_no": "",
    "reg_up3_no": "",
    "reg_up3": "",
    "reg": ".*FuncChinaRain\\d{100}$",
    "reg_down3": "",
    "reg_down3_no": "",
    "line_to_lower": 0,
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能怎么怎么样, 推荐怎么怎么样",
    "id": 1
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "(loc|format|parse|pattern|layout|Layout).*(2006-01-02 15:04:05|2006-01-02).*(location|zone|offset)?",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能自定义时间格式, 慎用:time.Format(2006-01-02 15:04:05) --> 推荐:请用Elvish的datetimeutil.FormatBy**系列方法",
    "line_to_lower": 0,
    "id": 2
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "(time|Now).*(2006-01-02 15:04:05|2006-01-02)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能自定义时间格式, 慎用:time.Format(2006-01-02 15:04:05) --> 推荐:请用Elvish的datetimeutil.FormatBy**系列方法",
    "line_to_lower": 0,
    "id": 3
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "time.Now\\(\\).Format\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能自定义时间格式, 慎用:time.Format(2006-01-02 15:04:05) --> 推荐:请用Elvish的datetimeutil.FormatBy**系列方法",
    "line_to_lower": 0,
    "id": 4
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "%v(-|/)%v(-|/)%v %v:%v:%v.*year.*month.*day",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能自定义时间格式 慎用:自己用Sprintf拼接时间格式 --> 推荐:请用Elvish的datetimeutil.FormatBy**系列方法",
    "line_to_lower": 0,
    "id": 5
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "year *\\+ *\"-\" *\\+ *month *\\+ *\"-\" *\\+ *day *\\+ *\" \" *\\+ *hour *\\+ *\":\" *\\+ *mintue *\\+ *\":\" *\\+ *second",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能自定义时间格式 慎用:自己用Sprintf拼接时间格式 --> 推荐:请用Elvish的datetimeutil.FormatBy**系列方法",
    "line_to_lower": 0,
    "id": 6
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "%v:%v:%v %v(-|/)%v(-|/)%v.*year.*month.*day",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能自定义时间格式, 慎用:自己用Sprintf拼接时间格式 --> 推荐:请用Elvish的datetimeutil.FormatBy**系列方法",
    "line_to_lower": 0,
    "id": 7
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "=.*%v:%v:%v.*hour.*minute.*second",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能自定义时间格式, 慎用:自己用Sprintf拼接时间格式 --> 推荐:请用Elvish的datetimeutil.FormatBy**系列方法",
    "line_to_lower": 0,
    "id": 8
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "=.*%s(-|/)%s(-|/)%s %s:%s:%s.*year.*month.*day",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能自定义时间格式, 慎用:自己用Sprintf拼接时间格式 --> 推荐:请用Elvish的datetimeutil.FormatBy**系列方法",
    "line_to_lower": 0,
    "id": 9
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "%d-%02d-%02d %02d:%02d:%02d",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能自定义时间格式, 慎用:自己用Sprintf拼接时间格式 --> 推荐:请用Elvish的datetimeutil.FormatBy**系列方法",
    "line_to_lower": 0,
    "id": 10
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "time.*\\.Format\\(.*\"(\\d\\d\\d\\d.{1}\\d\\d.{1}\\d\\d \\d\\d:\\d\\d:\\d\\d(?<!2006-01-02 15:04:05))\"",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "时间pattern错误,应该使用 2006-01-02 15:04:05",
    "line_to_lower": 0,
    "id": 11
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "(format|display|local|Format|Local|style|Style|show).*=.*time\\..*\\.Format\\(\"2006-01-02 15:04:05\"\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "时间Pattern不能写死成 2006-01-02 15:04:05, 因为各国时间风格不同",
    "line_to_lower": 0,
    "id": 12
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "time.*\\.Format\\((\"2006/01/02 15:04:05\"|\"02/01/2006 15:04:05\"|\"15:04:05 2006-01-02\"|\"15:04:05 2006/01/02\"|\"01-02-2006 15:04:05\"|\"01/02/2006 15:04:05\"|\"1-2-2006 15:04:05\"|\"2-1-2006 15:04:05\")",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不应该定制时间格式, 需要根据CLDR来决定各国时间展示格式, 推荐:使用Elvish处理时间展示",
    "line_to_lower": 0,
    "id": 13
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不能自定义时间格式",
    "level": "warning",
    "reg": "Sprintf\\(\"%s - %s\", *time[^ ]* *time[^ ]*\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "时间段格式化不同时间间隔有不同的展示风格, 请使用Elvish处理时间段展示",
    "line_to_lower": 0,
    "id": 14
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时区相关",
    "level": "warning",
    "reg": ".*time.FixedZone\\(.*",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不应该一直使用一个默认时区, 推荐:使用用户请求参数中的时区",
    "line_to_lower": 0,
    "id": 15
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时区相关",
    "level": "warning",
    "reg": "time.LoadLocation\\(\".*\"",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不应该hardcode指定某个特定时区; 推荐:应该使用用户请求中的时区",
    "line_to_lower": 0,
    "id": 16
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时区相关",
    "level": "warning",
    "reg": "time\\.(Now|Unix).*.Zone\\(\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不建议直接使用timezone或者utc_offset来进行时间计算, 推荐: 使用Elvish的时间类处理",
    "line_to_lower": 0,
    "id": 17
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时区相关",
    "level": "warning",
    "reg": "time.*Location.*\"(CST|MST|PST|EDT|CDT)\"",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "timezone应该使用完整格式,不能使用简写, 推荐:使用完整格式的时区比如America/Chihuahua",
    "line_to_lower": 0,
    "id": 18
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时区相关",
    "level": "warning",
    "reg": ".*\"(GMT|UTC)(-|\\+)\\d+\".*",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能使用UTC+8、GMT+8 等格式的时区, 推荐:使用完整格式的时区比如America/Chihuahua",
    "line_to_lower": 0,
    "id": 19
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时区相关",
    "level": "warning",
    "reg": "time.LoadLocation\\([^(),]*(country|Country)[^(),]*\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能按国家粒度进行时间计算,必须按时区粒度, 因为一个国家可能有多个时区",
    "line_to_lower": 0,
    "id": 20
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间转换",
    "level": "warning",
    "reg": "time.Unix((?!\\.In\\().)*Format\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "时间格式化时应该指定timezone或者city_id, 例如:time.Unix().In(loc).Format()",
    "line_to_lower": 0,
    "id": 21
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间转换",
    "level": "warning",
    "reg": "time.(Now|Unix)\\([^()]*\\)\\.(Date|Day|Hour|Mintue|Second|Weekday|ISOWeek)\\(\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "时间戳和Date转换时,必须指定时区, 例如:time.Unix().In(loc).Hour()",
    "line_to_lower": 0,
    "id": 22
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间转换",
    "level": "warning",
    "reg": "time.*\\.Format\\((\"2006/01/02 15:04:05\"|\"02/01/2006 15:04:05\"|\"15:04:05 2006-01-02\"|\"15:04:05 2006/01/02\"|\"01-02-2006 15:04:05\"|\"01/02/2006 15:04:05\"|\"1-2-2006 15:04:05\"|\"2-1-2006 15:04:05\")",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "time.Date对象初始化时应该带时区参数, 例如:time.Date(2022, 10, 1, 23,59, 59, 0, timezone)",
    "line_to_lower": 0,
    "id": 23
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间反转",
    "level": "warning",
    "reg": "time.Parse\\([^(),]*,[^(),]*\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "时间字符串转时间戳时, 应该指定timezone, 或者使用Elvish.GetTimeStampByXXX进行处理",
    "line_to_lower": 0,
    "id": 24
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间反转",
    "level": "warning",
    "reg": "time.Parse\\([^(),]*,[^(),]*\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "时间字符串转时间戳时, 应该指定timezone, 或者使用Elvish.GetTimeStampByXXX进行处理",
    "line_to_lower": 0,
    "id": 25
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间反转",
    "level": "warning",
    "reg": "time[^ ]* *== *(\"0[1,2]:[0-5]\\d:\\d\\d\"|\"0[1,2]:[0-5]\\d\")",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "定时任务尽量避开0点到3点, 高精度业务需要自己保证幂等性和补偿机制",
    "line_to_lower": 0,
    "id": 26
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 日历相关",
    "level": "warning",
    "reg": "(=|return).*time.Now.*\\+(.*3600.*24 *\\*|.*86400 *\\*|.*24.+60.+60 *\\*|.*60.+60.+24 *\\*) *\\d+",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "未来时间不能用86400方式计算, 推荐:使用Elvish提供的未来时间计算函数",
    "line_to_lower": 0,
    "id": 27
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 日历相关",
    "level": "warning",
    "reg": "time.(Now|Unix).*/ *(86400|SECOND[A-Z_]*DAY|DAY[A-Z_]*SECOND)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能用86400, 判断是否是一天的开始, 推荐:使用Elvish的Canlender类处理",
    "line_to_lower": 0,
    "id": 28
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 日历相关",
    "level": "warning",
    "reg": "\\([^ ]*hour[^ ]* *- *[^ ]*hour[^ ]* *\\) *\\* *(3600|SECOND[A-Z_]*HOUR|HOUR[A-Z_]*SECOND)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能用小时直接相减计算时间差, 推荐: 使用Elvish的TimeDiff函数计算时间间隔",
    "line_to_lower": 0,
    "id": 29
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 日历相关",
    "level": "warning",
    "reg_up3_no": "time\\.(Now|Unix)((?!\\.In\\().)*",
    "reg": "time\\.Date\\(((?!\\.In\\().)*\\.Year\\(\\),((?!\\.In\\().)*\\.Month.*((?!\\.In\\().)*\\.Day.*0.*0.*0.*0.*",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "time.Day() Year() Month() 等函数需要指定时区 time.In(location).Day()",
    "line_to_lower": 0,
    "id": 30
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 日历相关",
    "level": "warning",
    "reg_up3_no": "time\\.(Now|Unix)((?!\\.In\\().)*",
    "reg": "time\\.Date\\(((?!\\.In\\().)*\\.Year\\(\\),((?!\\.In\\().)*\\.Month.*((?!\\.In\\().)*\\.Day.*23.*59.*59.*0.*",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "获取一天的开始或者结束时间, 请使用Elvish提供的能力",
    "line_to_lower": 0,
    "id": 31
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 日历相关",
    "level": "warning",
    "reg_up3_no": "time\\.(Now|Unix)((?!\\.In\\().)*",
    "reg": "offset.*=.*time.Monday *- *.*Weekday",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "获取一天开始、一周开始、一月开始，都需要指定用户请求的timezone 或者:推荐使用Elvish解决",
    "line_to_lower": 0,
    "id": 32
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 日历相关",
    "level": "warning",
    "reg": "time.*% *(86400|SECOND[A-Z_]*DAY|DAY[A-Z_]*SECOND)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|datetimeutil)",
    "alert_msg": "不能对86400取模判断是哪一天，因为有的国家1天 != 86400秒; 推荐:使用Elvish处理时间日历",
    "line_to_lower": 0,
    "id": 33
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "datetimeutil.FormatBy\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不推荐用此函数，除非不知道cityid只知道timezone时可用此函数. 推荐: 请业务尽量使用 FormatByCityId",
    "line_to_lower": 0,
    "id": 34
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "datetimeutil.Format\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "使用了禁用函数datetimeutil.Format, 请使用datetimeutil.FormatByCityID",
    "line_to_lower": 0,
    "id": 35
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "datetimeutil.GetTimeStampByCityId\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不推荐用此函数，参数过于复杂，业务可能用错。 推荐: 业务尽量使用 GetTimeStampByPattern",
    "line_to_lower": 0,
    "id": 36
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "datetimeutil.FormatSimple\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不推荐用此函数，此函数是RD自定义时间pattern，并不是local最佳时间风格。推荐: 请业务尽量使用 FormatByCityId",
    "line_to_lower": 0,
    "id": 37
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "(time.LoadLocation\\(|time.ParseInLocation\\()",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "使用了禁用函数 time.ParseInLocation, 使用Elvish处理时间,业务不需要自己加载location",
    "line_to_lower": 0,
    "id": 38
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "(time|Time|Local|local)*(time|Time|Local|local).*\\.In\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "使用了禁用函数 time.In, 使用Elvish处理时间,如datetimeutil.FormatByCityID",
    "line_to_lower": 0,
    "id": 39
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "=.*(time|Time|Local|local)\\.(Year|Month|Day)\\(\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|elvish)",
    "alert_msg": "使用了禁用函数 time.Year|Month|Day(), 使用Elvish处理时间,如datetimeutil.FormatByCityID",
    "line_to_lower": 0,
    "id": 40
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "(unix|time|local|Unix|Time|Local).*\\.Weekday\\(\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|elvish)",
    "alert_msg": "使用了禁用函数 time.Weekday(), 使用Elvish处理时间,如calendarutil.Get(.. CAL_DAY_OF_WEEK ..)",
    "line_to_lower": 0,
    "id": 41
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "time\\.Date\\(.*, *loc.*\\.AddDate\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|elvish)",
    "alert_msg": "使用了禁用函数 time.Date().Unix(), 使用Elvish进行时间戳->时间字符串的转换, 如datetimeutil.FormatByCityID",
    "line_to_lower": 0,
    "id": 42
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "time\\.Date\\(.*\\.Unix\\(\\)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|elvish)",
    "alert_msg": "使用了禁用函数 time.Date().Unix(), 使用Elvish进行时间戳->时间字符串的转换, 如datetimeutil.FormatByCityID",
    "line_to_lower": 0,
    "id": 43
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不建议的函数",
    "level": "warning",
    "reg": "datetimeutil.GetTimeStampByCityId\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不推荐用此函数，参数过于复杂，业务可能用错。 推荐: 业务尽量使用 GetTimeStampByPattern",
    "line_to_lower": 0,
    "id": 44
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 不建议的函数",
    "level": "warning",
    "reg": "datetimeutil.FormatSimple\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不推荐用此函数，此函数是RD自定义时间pattern，并不是local最佳时间风格。推荐: 请业务尽量使用 FormatByCityId",
    "line_to_lower": 0,
    "id": 45
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "(=|return ).*format.*\\(.*utc.*offset",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "禁止使用utcoffset计算时间, 使用Elvish格式化时间,如datetimeutil.FormatByCityID",
    "line_to_lower": 0,
    "id": 46
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 禁用函数",
    "level": "warning",
    "reg": "(=|return ).*\\bformat\\(.*(time|zone|Time|Zone|local|Local)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "禁止使用timezone处理时间,  使用Elvish格式化时间,如datetimeutil.FormatByCityID",
    "line_to_lower": 0,
    "id": 47
  },
  {
    "rule_type": "i18n",
    "rule_name": "go hardcode 时间",
    "level": "warning",
    "reg": "\"2\\d{3}(-|/)\\d{2}(-|/)\\d{2}\"",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|create_time|update_time|2006-01-02|len)",
    "alert_msg": "时间变量不能硬编码",
    "line_to_lower": 0,
    "id": 48
  },
  {
    "rule_type": "i18n",
    "rule_name": "go hardcode 时间",
    "level": "warning",
    "reg": "\"\\d{2}(-|/)\\d{2}(-|/)2\\d{3}\"",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|create_time|update_time|2006-01-02|len)",
    "alert_msg": "时间变量不能硬编码",
    "line_to_lower": 0,
    "id": 49
  },
  {
    "rule_type": "i18n",
    "rule_name": "go hardcode 时间",
    "level": "warning",
    "reg": "\\d{2}:\\d{2}:\\d{2}",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|create_time|update_time|2006-01-02|len)",
    "alert_msg": "时间变量不能硬编码",
    "line_to_lower": 0,
    "id": 50
  },
  {
    "rule_type": "i18n",
    "rule_name": "go hardcode 国家",
    "level": "warning",
    "reg": "=.*\\(.*('|\")(AE|AR|AU|BD|BY|BO|BR|CL|CI|CO|CR|DO|DZ|EC|EG|GB|GH|GT|JP|KZ|KE|MA|MX|NG|NL|NZ|PK|PA|PE|PR|RU|SA|TZ|UG|UA|ZA)('|\")",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|intlGettext)",
    "alert_msg": "国家不能硬编码",
    "line_to_lower": 0,
    "id": 51
  },
  {
    "rule_type": "i18n",
    "rule_name": "go hardcode 国家",
    "level": "warning",
    "reg": "=.*(time|date).*\\(.*\\b(BR|MX|CL|AU)\\b",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|intlGettext)",
    "alert_msg": "国家不能硬编码",
    "line_to_lower": 0,
    "id": 52
  },
  {
    "rule_type": "i18n",
    "rule_name": "go hardcode cityid",
    "level": "warning",
    "reg": "=.*(datetimeutil|DatetimeUtil::).*\\(\\d{7,15}.*,.*,",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "cityid不能硬编码",
    "line_to_lower": 0,
    "id": 53
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间加减风险",
    "level": "warning",
    "reg": "(=|return).{0,64}(time|date).*(\\+|\\-).{0,64}(day|DAY)",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|sql|select|table)",
    "alert_msg": "前N天或者后N天不能用时间戳直接加减, 推荐: 用elvish处理未来和过去时间",
    "line_to_lower": 0,
    "id": 54
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间加减风险",
    "level": "warning",
    "reg": "(=|return).*(time|date).*(\\+|\\-).* [a-zA-Z_$]*(day|DAY)[a-zA-Z_]* *\\* *",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "前N天或者后N天不能用时间戳直接加减, 推荐: 用elvish处理未来和过去时间",
    "line_to_lower": 0,
    "id": 55
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间加减风险",
    "level": "warning",
    "reg": "date\\(\"Y(-|/| )m(-|/| )d.*\\+.*(day\"|days\"|day'|days')",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "前N天或者后N天不能用时间戳直接加减, 推荐: 用elvish处理未来和过去时间",
    "line_to_lower": 0,
    "id": 56
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间计算风险",
    "level": "warning",
    "reg": "(=|return).*(time|date).*(\\+|\\-).*\\b86400\\b *\\*",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "未来时间不能直接用86400秒算, 有的国家一天不是24小时; 推荐: 用elvish提供的方案计算",
    "line_to_lower": 0,
    "id": 57
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间计算风险",
    "level": "warning",
    "reg": "(=|return).*(time|date).*(\\+|\\-) *[a-zA-Z_]* *\\* *\\b86400\\b",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "未来时间不能直接用86400秒算, 有的国家一天不是24小时; 推荐: 用elvish提供的方案计算",
    "line_to_lower": 0,
    "id": 58
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间计算风险",
    "level": "warning",
    "reg": "(day|week|year|month|Month|Year|Day|Week).*=.*(unix|time|stamp|\\bts\\b|local).*(\\+|-) *",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能用时间戳直接做加减法, 有的国家一天不是24小时",
    "line_to_lower": 0,
    "id": 59
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间比较",
    "level": "warning",
    "reg": "time.*str.*(>|<).*time.*str",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "时间字符串不能比较, 有的国家是时分秒日月年格式, 如果要比较请用自定义时间pattern=yyyy-MM-dd HH:mm:ss",
    "line_to_lower": 0,
    "id": 60
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间截取",
    "level": "warning",
    "reg": "(date|day).*=.*time.*\\[0 *:10 *\\]",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "前10个字符不一定是日期, 有的国家是 时分秒日月年格式",
    "line_to_lower": 0,
    "id": 61
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间截取",
    "level": "warning",
    "reg": "(date|day).*=.*time.*\\[0 *:10 *\\]",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "前10个字符不一定是日期, 有的国家是 时分秒日月年格式",
    "line_to_lower": 0,
    "id": 62
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 时间截取",
    "level": "warning",
    "reg": "(date|day).*=.*time.*\\[ *\\w *: *\\w\\]",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能按下标截取时间或者日期, 有的国家是 时分秒日月年格式",
    "line_to_lower": 0,
    "id": 63
  },
  {
    "rule_type": "i18n",
    "rule_name": "go elvish 使用错误",
    "level": "warning",
    "reg": "datetimeutil.[A-Z].*\\(.*time.*float",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "elvish参数不能是浮点数",
    "line_to_lower": 0,
    "id": 64
  },
  {
    "rule_type": "i18n",
    "rule_name": "go elvish 参数错误",
    "level": "warning",
    "reg": "datetimeutil.FormatBy.*\\(.*,.*,.*,(.*HHMM|.*HHMMSS),.*,.*",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "第4个参数错误, 应该是datetimeutil.HHMM 或者 datetimeutil.HHMMSS",
    "line_to_lower": 0,
    "id": 65
  },
  {
    "rule_type": "i18n",
    "rule_name": "go elvish 参数错误",
    "level": "warning",
    "reg": "datetimeutil.FormatBy.*\\(.*,.*,.*,.*,.*M[YMD]*,.*",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "第5个参数错误, 应该是YYYYMMDD或YYMMDD或YYYYMMM或MMMDDEEE或MMMDD",
    "line_to_lower": 0,
    "id": 66
  },
  {
    "rule_type": "i18n",
    "rule_name": "go elvish 参数错误",
    "level": "warning",
    "reg": "datetimeutil.FormatBy.*\\(.*,.*,.*,.*M[YMD]*,.*H[MS]*, *\".*[-/ :].*\"",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "4、5参数必须是PATTERN时才能使用第6个自定义参数, 正确用法: (local,city,time,datetimeutil.YYYYMMDD, datetimeutil.HHMMSS, \"\"), 或者: (local,city,time,datetimeutil.PATTERN, datetimeutil.PATTERN, \"yyyy-MM-dd HH:mm:ss\")",
    "line_to_lower": 0,
    "id": 67
  },
  {
    "rule_type": "i18n",
    "rule_name": "go elvish 参数错误",
    "level": "warning",
    "reg": "datetimeutil.FormatBy.*\\(.*,.*,.*,.*M[YMD]*,.*, *\".*[-/ :].*\"",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "4、5参数必须是PATTERN时才能使用第6个自定义参数, 正确用法: (local,city,time,datetimeutil.YYYYMMDD, datetimeutil.HHMMSS, \"\"), 或者: (local,city,time,datetimeutil.PATTERN, datetimeutil.PATTERN, \"yyyy-MM-dd HH:mm:ss\")",
    "line_to_lower": 0,
    "id": 68
  },
  {
    "rule_type": "i18n",
    "rule_name": "go elvish 参数错误",
    "level": "warning",
    "reg": "datetimeutil.FormatBy.*\\(.*,.*,.*,.*,.*H[MS]*, *\".*[-/ :].*\"",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "4、5参数必须是PATTERN时才能使用第6个自定义参数, 正确用法: (local,city,time,datetimeutil.YYYYMMDD, datetimeutil.HHMMSS, \"\"), 或者: (local,city,time,datetimeutil.PATTERN, datetimeutil.PATTERN, \"yyyy-MM-dd HH:mm:ss\")",
    "line_to_lower": 0,
    "id": 69
  },
  {
    "rule_type": "i18n",
    "rule_name": "go elvish 赋值错误",
    "level": "warning",
    "reg": "(bj_time|beijing).*=.*datetimeutil.Format.*\\(",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "elvish结果赋值给了 北京时间变量",
    "line_to_lower": 0,
    "id": 70
  },
  {
    "rule_type": "i18n",
    "rule_name": "环境配置错误",
    "level": "warning",
    "reg": "(time|zone|Zone|local|Local).*\"CST\"",
    "i18n_type": "time",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能使用CST时区, 不同系统CST有歧义, 既表示中国时区又表示美国中部时区",
    "line_to_lower": 0,
    "id": 71
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "\\bdate.*'Y-m-d H:i:s',",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:date('Y-m-d H:i:s')系列 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 72
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "\\bdate.*'yyyy-MM-dd hh:mm:ss',",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:date('yyyy-MM-dd hh:mm:ss')系列 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 73
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "\\bdate_format\\b.*'yyyy-MM-dd hh:mm:ss',",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:date_format('yyyy-MM-dd hh:mm:ss')系列 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 74
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "=.*\\$year.'-'.\\$month.'-'.\\$day.' '.\\$hour.':'.\\$minute.':'.\\$second",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:$year.$month.$day方式自行拼接时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 75
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "=.*\\$year.'-'.\\$mon(th){0,1}.'-'.\\$day.' '.\\$hour.':'.\\$min(ute){0,1}.':'.\\$second",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:$year.$month.$day方式自行拼接时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 76
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "=.*\\$year.'/'.\\$mon(th){0,1}.'/'.\\$day.' '.\\$hour.':'.\\$min(ute){0,1}.':'.\\$second",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:$year.$month.$day方式自行拼接时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 77
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "\\$(time_str|local_time|local_date|display).*=.*\\$.*\\.'-'\\.\\$.*\\.'-'\\.\\$.*\\.' '\\.\\$.*\\.':'\\.\\$.*\\.':'\\.\\$.*",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:$year.$month.$day方式自行拼接时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 78
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "\\$(time_str|local_time|local_date|display).*=.*\\$.* \\. '-' \\. \\$.* \\. '-' \\. \\$.* \\. ' ' \\. \\$.* \\. ':' \\. \\$.* \\. ':' \\. \\$.*",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:$year.$month.$day方式自行拼接时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 79
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "=.*sprintf.*%s(-|/)%s(-|/)%s %s:%s:%s.*year.*month.*day",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:用sprintf拼接时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 80
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "=.*sprintf.*%s(-|/)%s(-|/)%s.*year.*month.*day",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:用sprintf拼接时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 81
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "local.*time.*=.*sprintf.*%s(-|/)%s(-|/)%s",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:用sprintf拼接时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 82
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "(format|display|local|Format|Local|style|Style|show).*=.*conf.*(\\$loc|\\$LOC)",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:自定义各国的时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 83
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "('|\")(pt|en|es|zh)('|\").*('|\")(Y-m-d|d-m-Y|Y/m/d|d/m/Y|Y.m.d|d.m.Y|Y m d|d m Y|h:i A|H:i)('|\")",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:自定义各国的时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 84
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "(format|Format).*(time|Time|unix|Unix|Timestamp|timestamp|zone|Zone).*(Y-m-d|d-m-Y|Y/m/d|d/m/Y|Y.m.d|d.m.Y|Y m d|d m Y|h:i A|H:i).*(time|Time|unix|Unix|Timestamp|timestamp|zone|Zone)",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:自定义时间格式函数 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 85
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "\\$.*=.*\\$.*\\.'-'\\.\\$.*\\.'-'\\.\\$.*\\.' '\\.\\$.*\\.':'\\.\\$.*\\.':'\\.\\$.*",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:$year.$month.$day方式自行拼接时间格式 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 86
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "=.*\\bdate\\(.*('|\")Y-m-d('|\").*",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|DatetimeUtil::)",
    "alert_msg": "不能自定义时间格式, 慎用:date('Y-m-d')系列 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 87
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "line_to_lower": 0,
    "reg": "(format|Format|date|Date).*\\(.*(time|stamp|format|zone|unix|pattern).*,.*(time|stamp|zone|unix|pattern)",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|strconv|DatetimeUtil::| function |datetimeutil)",
    "alert_msg": "不能自定义时间格式, 慎用:自定义时间格式函数 --> 推荐:请用Elvish的DatetimeUtil::formatBy** 系列函数",
    "id": 88
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 不能自定义时间格式",
    "level": "warning",
    "reg": "\\bDateTime\\(.*,.*(time|zone|local|Time|Zone)",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能使用DateTime自定义时间格式, 请使用elvish对应方法, 如DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 89
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 禁用函数",
    "level": "warning",
    "reg": "=.*strtotime\\(\\$",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|self::strtotime|->strtotime)",
    "alert_msg": "使用了禁用函数strtotime, 请使用Elvish的 DatetimeUtil::getTsByPattern** 系列函数",
    "line_to_lower": 0,
    "id": 90
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 禁用函数",
    "level": "warning",
    "reg": "\\bdate_default_timezone_set\\(",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint|self::strtotime|->strtotime)",
    "alert_msg": "使用了禁用函数date_default_timezone_set, 业务不应该自己设置时区; Elvish以cityId为主要参数,业务无需关注timezone",
    "line_to_lower": 0,
    "id": 91
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 禁用函数",
    "level": "warning",
    "reg": "=.*date_format\\(\\$",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "使用了禁用函数date_format, 请使用Elvish的 DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 92
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 禁用函数",
    "level": "warning",
    "reg": "=.*date_format\\(\\$",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "使用了禁用函数date_format, 请使用Elvish的 DatetimeUtil::formatBy** 系列函数",
    "line_to_lower": 0,
    "id": 93
  },
  {
    "rule_type": "i18n",
    "rule_name": "php elvish 使用错误",
    "level": "warning",
    "reg": "DatetimeUtil::.*\\(.*\\d*\\.\\d*",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "elvish参数不能是浮点数",
    "line_to_lower": 0,
    "id": 94
  },
  {
    "rule_type": "i18n",
    "rule_name": "php elvish 使用错误",
    "level": "warning",
    "reg": "DatetimeUtil::.*\\(.*float",
    "i18n_type": "time",
    "file_type": ".*.php",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "elvish参数不能是浮点数",
    "line_to_lower": 0,
    "id": 95
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 自定义时间展示",
    "level": "warning",
    "reg": "String.format\\(\"%s[-\\/]%s[-\\/]%s.*Year.*Month.*Day",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能自己拼接时间展示, 推荐使用Elvish的DatetimeUtil类处理时间展示",
    "line_to_lower": 0,
    "id": 96
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时区相关",
    "level": "warning",
    "reg": "GregorianCalendar\\(\\)|Calendar.getInstance\\(\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不应该一直使用一个默认时区, 推荐:使用用户请求参数中的时区",
    "line_to_lower": 0,
    "id": 97
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时区相关",
    "level": "warning",
    "reg": "TimeZone.setDefault\\(.+\\)|TimeZone.getDefault\\(\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能使用默认时区。推荐:使用用户请求参数中的时区",
    "line_to_lower": 0,
    "id": 98
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时区相关",
    "level": "warning",
    "reg": "(timezone|timeZone|TimeZone)\\.getDisplayName\\(\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "timezone.getDisplayName方法需要指定locale",
    "line_to_lower": 0,
    "id": 99
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时区相关",
    "level": "warning",
    "reg": "(TimeZone.getTimeZone|ZoneId.of)\\(\"\\w*\\/\\w*\"\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不应该hardcode指定某个特定时区; 推荐:应该使用用户请求中的时区",
    "line_to_lower": 0,
    "id": 100
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时区相关",
    "level": "warning",
    "reg": "(TimeZone|timezone)\\(\"(CST|MST|PST|EDT|CDT)\"\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能使用简写的timezone格式, 因为可能存在歧义",
    "line_to_lower": 0,
    "id": 101
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时区相关",
    "level": "warning",
    "reg": "(timezone|TimeZone).*\"(GMT|UTC)(-|\\+)\\d+\".*",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能使用UTC+8, GMT+8等格式的时区",
    "line_to_lower": 0,
    "id": 102
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间运算",
    "level": "warning",
    "reg": "currentTimeMillis.*\\+(.*3600.*24 *\\*|.*86400 *\\*|.*24.+60.+60 *\\*|.*60.+60.+24 *\\*) *\\d+",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "1天!=24小时, 不能用86400秒等方式进行时间运算",
    "line_to_lower": 0,
    "id": 103
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg": "dd[-/]MM[-/]yy(yy)* HH(:mm)*(:ss)*\"|\"yy(yy)*[-/]MM[-/]dd HH(:mm)*(:ss)*|\"MM[-/]dd HH(:mm)*(:ss)*\"",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "时间展示Pattern不能写死, 推荐使用Elvish的DatetimeUtil类进行处理",
    "line_to_lower": 0,
    "id": 104
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg_in_func_no": ".*\\.(setTimeZone|withLocale)\\(",
    "reg": "\\.format\\(\\w*(TimeFormatter|time_formatter)\\w*\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "Date.format方法前面必须用 withLocale方法设置时区",
    "line_to_lower": 0,
    "id": 105
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg_in_func_no": ".*\\.(setTimeZone|withLocale)\\(",
    "reg": " LocalDateTime.parse\\(.*,.*(Formatter|formatter) *\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "LocalDateTime.parse方法前面必须用 withLocale方法设置时区",
    "line_to_lower": 0,
    "id": 106
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg_in_func_no": ".*\\.(setTimeZone|withLocale)\\(",
    "reg": " LocalTime.parse\\(.*,.*(Formatter|formatter) *\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "LocalDateTime.parse方法前面必须用 withLocale方法设置时区",
    "line_to_lower": 0,
    "id": 107
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg_in_func_no": ".*\\.(setTimeZone|withLocale)\\(",
    "reg": " MonthDay.parse\\(.*,.*(Formatter|formatter) *\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "MonthDay.parse方法前面必须用 withLocale方法设置时区",
    "line_to_lower": 0,
    "id": 108
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg_in_func_no": ".*\\.(setTimeZone|withLocale)\\(",
    "reg": " OffsetDateTime.parse\\(.*,.*(Formatter|formatter) *\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "OffsetDateTime.parse方法前面必须用 withLocale方法设置时区",
    "line_to_lower": 0,
    "id": 109
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg_in_func_no": ".*\\.(setTimeZone|withLocale)\\(",
    "reg": " OffsetTime.parse\\(.*,.*(Formatter|formatter) *\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "OffsetTime.parse方法前面必须用 withLocale方法设置时区",
    "line_to_lower": 0,
    "id": 110
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg_in_func_no": ".*\\.(setTimeZone|withLocale)\\(",
    "reg": " YearMonth.parse\\(.*,.*(Formatter|formatter) *\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "YearMonth.parse方法前面必须用 withLocale方法设置时区",
    "line_to_lower": 0,
    "id": 111
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg_in_func_no": ".*\\.(setTimeZone|withLocale)\\(",
    "reg": " ZonedDateTime.parse\\(.*,.*(Formatter|formatter) *\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "ZonedDateTime.parse方法前面必须用 withLocale方法设置时区",
    "line_to_lower": 0,
    "id": 112
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg": "DateFormat.(getDateInstance|getDateTimeInstance|getInstance|getTimeInstance)\\((?!.*locale.*)[^)]*\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "getDateInstance等方法必须指定locale参数",
    "line_to_lower": 0,
    "id": 113
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg": "DateFormat.(getDateInstance|getDateTimeInstance|getInstance|getTimeInstance)\\((?!.*locale.*)[^)]*\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "getDateInstance方法必须指定locale参数",
    "line_to_lower": 0,
    "id": 114
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg": "new SimpleDateFormat\\(",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "SimpleDateFormat无法生成本地化的时间格式, 如果日期是显示给用户的，则应使用DateFormat类",
    "line_to_lower": 0,
    "id": 115
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 时间展示风格",
    "level": "warning",
    "reg": "new DateFormatSymbols\\(\\)",
    "i18n_type": "time",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "new DateFormatSymbols()需要指定locale参数, 推荐 new DateFormatSymbols(locale)",
    "line_to_lower": 0,
    "id": 116
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 拼接货币符号",
    "level": "warning",
    "reg": "('|\")(CNY|TWD|HKD|USD|BRL|AUD|MXN|COP|JPY|CLP|PEN|CRC|USD|RUB|DOP|ARS|USD|NZD|USD|ZAR|EGP|KZT|GBP|UAH|UGX|NGN|TZS|SAR|HK\\$|₡|元|£|MXN\\$|円|₦|US\\$|TSh|USh|R\\$|RD\\$|₴|₸|圜|S/|₽)('|\")",
    "i18n_type": "currency",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock|demo)",
    "alert_msg": "不能硬编码货币符号",
    "line_to_lower": 0,
    "id": 117
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 拼接货币符号",
    "level": "warning",
    "reg": "('|\").*%(s|v) *(CNY|TWD|HKD|USD|BRL|AUD|MXN|COP|JPY|CLP|PEN|CRC|USD|RUB|DOP|ARS|USD|NZD|USD|ZAR|EGP|KZT|GBP|UAH|UGX|NGN|TZS|SAR|HK\\$|₡|元|£|MXN\\$|円|₦|US\\$|TSh|USh|R\\$|RD\\$|₴|₸|圜|S/|₽)('|\")",
    "i18n_type": "currency",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock|demo)",
    "alert_msg": "不能自己拼接货币格式, 推荐: 用elvish的currencyutil类处理货币展示",
    "line_to_lower": 0,
    "id": 118
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 拼接货币符号",
    "level": "warning",
    "reg": "('|\")(CNY|TWD|HKD|USD|BRL|AUD|MXN|COP|JPY|CLP|PEN|CRC|USD|RUB|DOP|ARS|USD|NZD|USD|ZAR|EGP|KZT|GBP|UAH|UGX|NGN|TZS|SAR|HK\\$|₡|元|£|MXN\\$|円|₦|US\\$|TSh|USh|R\\$|RD\\$|₴|₸|圜|S/|₽) *%(s|v).*('|\")",
    "i18n_type": "currency",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock|demo)",
    "alert_msg": "不能自己拼接货币格式, 推荐: 用elvish的currencyutil类处理货币展示",
    "line_to_lower": 0,
    "id": 119
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 货币符号硬编码",
    "level": "warning",
    "reg": ".*=.*\"MXN\\$\" *\\+",
    "i18n_type": "currency",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能硬编码货币符号",
    "line_to_lower": 0,
    "id": 120
  },
  {
    "rule_type": "i18n",
    "rule_name": "go 货币符号硬编码",
    "level": "warning",
    "reg": "(format|display|currency).*(CNY|TWD|HKD|USD|BRL|AUD|MXN|COP|JPY|CLP|PEN|CRC|USD|RUB|DOP|ARS|USD|NZD|USD|ZAR|EGP|KZT|GBP|UAH|UGX|NGN|TZS|SAR|HK\\$|₡|元|£|MXN\\$|円|₦|US\\$|TSh|USh|R\\$|RD\\$|₴|₸|圜|S/|₽) %.*,",
    "i18n_type": "currency",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能硬编码货币符号",
    "line_to_lower": 0,
    "id": 121
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 货币符号硬编码",
    "level": "warning",
    "reg": ".*=.*'(CNY|TWD|HKD|USD|BRL|AUD|MXN|COP|JPY|CLP|PEN|CRC|USD|RUB|DOP|ARS|USD|NZD|USD|ZAR|EGP|KZT|GBP|UAH|UGX|NGN|TZS|SAR|HK\\$|₡|元|£|MXN\\$|円|₦|US\\$|TSh|USh|R\\$|RD\\$|₴|₸|圜|S/|₽) *' *\\. *\\$",
    "i18n_type": "currency",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint)",
    "alert_msg": "不能硬编码货币符号",
    "line_to_lower": 0,
    "id": 122
  },
  {
    "rule_type": "i18n",
    "rule_name": "php 货币符号硬编码",
    "level": "warning",
    "reg": ".*=.*\"MXN\\$ *\" *\\. *\\$",
    "i18n_type": "currency",
    "file_type": ".*.go",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能硬编码货币符号",
    "line_to_lower": 0,
    "id": 123
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 自己拼接货币展示格式",
    "level": "warning",
    "reg": "String.format\\(\"%s *(%s|%f|%.2f)\" *,[^(),]*(\\$|Currency|Symbol|Huobi)[^,]*,[^,]*(amount|Amount|money|Money|bill|Bill)",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能自定义货币展示格式, 推荐使用Elvish的CurrencyUtil类处理",
    "line_to_lower": 0,
    "id": 124
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 自己拼接货币展示格式",
    "level": "warning",
    "reg": "String.format\\(\"[A-Z]{0,3}\\$ *(%f|%d|%s|%.2f)\" *,[^,]*(amount|Amount|money|Money|bill|Bill)",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能自定义货币展示格式, 推荐使用Elvish的CurrencyUtil类处理",
    "line_to_lower": 0,
    "id": 125
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 自己拼接货币展示格式",
    "level": "warning",
    "reg": ".*= *\"[A-Z]{0,3}\\$\" *\\+ *(amount|Amount|money|Money|bill|Bill) *;",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能自定义货币展示格式, 推荐使用Elvish的CurrencyUtil类处理",
    "line_to_lower": 0,
    "id": 126
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 自己拼接货币展示格式",
    "level": "warning",
    "reg": ".*= *\\w+\\.append\\(\"[A-Z]{0,3}\\$\"\\)\\.append\\(\\w*(amount|Amount|money|Money|bill|Bill)\\w*\\)",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能自定义货币展示格式, 推荐使用Elvish的CurrencyUtil类处理",
    "line_to_lower": 0,
    "id": 127
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 自己拼接货币展示格式",
    "level": "warning",
    "reg": ".*= *\\w+\\.append\\(\\w*(Currency|Symbol|Huobi).*\\)\\.append\\(\\w*(amount|Amount|money|Money|bill|Bill)\\w*\\) *;",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能自定义货币展示格式, 推荐使用Elvish的CurrencyUtil类处理",
    "line_to_lower": 0,
    "id": 128
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 自己拼接货币展示格式",
    "level": "warning",
    "reg": ".*= *\\w+\\.add\\(\\w*(\"[A-Z]{0,3}\\$\"|Currency|Symbol|Huobi).*\\)\\.add\\(\\w*(amount|Amount|money|Money|bill|Bill)\\w*\\) *;",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能自定义货币展示格式, 推荐使用Elvish的CurrencyUtil类处理",
    "line_to_lower": 0,
    "id": 129
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 硬编码货币符号",
    "level": "warning",
    "reg": ".*=.*\"(CNY|TWD|HKD|USD|BRL|AUD|MXN|COP|JPY|CLP|PEN|CRC|USD|RUB|DOP|ARS|USD|NZD|USD|ZAR|EGP|KZT|GBP|UAH|UGX|NGN|TZS|SAR|HK\\$|₡|元|£|MXN\\$|円|₦|US\\$|TSh|USh|R\\$|RD\\$|₴|₸|圜|S/|₽) *\".*(\\+|\\.add\\(|\\.append\\(|\\.join\\()",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能硬编码写死货币符号, 推荐使用Elvish的CurrencyUtil类处理",
    "line_to_lower": 0,
    "id": 130
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 硬编码",
    "level": "warning",
    "reg": "\\[\"\\w+\"\\] = \"(CNY|TWD|HKD|USD|BRL|AUD|MXN|COP|JPY|CLP|PEN|CRC|USD|RUB|DOP|ARS|USD|NZD|USD|ZAR|EGP|KZT|GBP|UAH|UGX|NGN|TZS|SAR|HK\\$|₡|元|£|MXN\\$|MX\\$|円|₦|US\\$|TSh|USh|R\\$|RD\\$|₴|₸|圜|S/|₽)\"",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能硬编码写死货币符号, 推荐使用Elvish的CurrencyUtil类处理",
    "line_to_lower": 0,
    "id": 131
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 硬编码",
    "level": "warning",
    "reg": "\\w*(format|Format|display|Display|local|Local|show|Show)\\w*\\([^()]*(\"en[-_]US\"|\"en[-_]AU\"|\"pt[-_]BR\"|\"es[-_]MX\"|\"es[-_]419\"|\"es[-_]CO\"|\"es[-_]AR\"|\"en[-_]CL\").*,.*\\)",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "不能硬编码写死locale, 推荐使用用户请求中的locale",
    "line_to_lower": 0,
    "id": 132
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 滴分军规",
    "level": "warning",
    "reg": "\\b(int|int32|float|float32)\\b *\\w*(difen|Difen|DiFen)\\w*",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "命名中有difen的，数据类型应该是int64/long，数据库类型应该是bigint",
    "line_to_lower": 0,
    "id": 133
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 滴分军规",
    "level": "warning",
    "reg": "if *\\w*(amount|money|Amount|Money|Difen|difen|DiFen)\\w* *(<|<=|>|>=) *(\\d+|MAX\\w+LIMIT|MAX\\w+QUOTA|MAX\\w+AMOUT|MAX\\w+MONEY|MIN\\w+LIMIT|MIN\\w+QUOTA|MIN\\w+AMOUT|MIN\\w+MONEY)",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "货币限额不应该写死在代码中, 应该按各国汇率进行换算",
    "line_to_lower": 0,
    "id": 134
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 滴分军规",
    "level": "warning",
    "reg": "(?!.*(difen|Difen|DiFen).*)String *\\w*(format|Format)\\w*(Amount|Bill|Money|amout|bill|money)\\w*\\(.*(amount|Amount|Money|money).*\\).*{",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "货币util函数，参数命名必须包含difen关键词, 比如amout_difen 或者 AmoutDiFen",
    "line_to_lower": 0,
    "id": 135
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 滴分军规",
    "level": "warning",
    "reg": "(?!.*(difen|Difen|DiFen|Yuan|yuan|YUAN).*).*=.*\\w*(format|Format)\\w*(Amount|Bill|Money|amout|bill|money)\\w*\\(.*(amount|Amount|Money|money).*\\)",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "调用货币相关函数时， amout参数必须带 difen 标识, 比如amout_difen 或者 AmoutDiFen",
    "line_to_lower": 0,
    "id": 136
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 滴分军规",
    "level": "warning",
    "reg": "(?!.*(difen|Difen|DiFen|DIFEN|_fen|_Fen).*).*CurrencyUtil\\.\\w*Format\\w*\\(.*$",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "调用货币格式化函数时, 参数名称必须包含difen, 错误:currencyUtil.format(amount), 正确:currencyUtil.format(amountDiFen)",
    "line_to_lower": 0,
    "id": 137
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 滴分军规",
    "level": "warning",
    "reg": "\\b((?!difen|Difen|DiFen)\\w)*(amount|Amount|money|Money)((?!difen|Difen|DiFen)\\w)*\\b *(\\+|-|\\+=|-=).*(difen|Difen|DiFen)",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "货币运算时, 滴分变量和元变量 不能运算，错误: amount_1_DiFen + amount_2_Yuan, 正确: amount_1_DiFen + amount_2_DiFen",
    "line_to_lower": 0,
    "id": 138
  },
  {
    "rule_type": "i18n",
    "rule_name": "java 滴分军规",
    "level": "warning",
    "reg": "(?=\\w*difen\\w*)\\w*amount\\w* *(\\+|-|\\+=|-=) *(?!.*(difen|Difen|DiFen).*).*(amount|Amount|Money|money).*",
    "i18n_type": "currency",
    "file_type": ".*.java",
    "exclude": "(log|test|nolint|no_lint|no-lint|mock)",
    "alert_msg": "货币运算时, 滴分变量和元变量 不能运算，错误: amount_1_DiFen + amount_2_Yuan, 正确: amount_1_DiFen + amount_2_DiFen",
    "line_to_lower": 0,
    "id": 139
  }
]